// Code generated by go-bindata.
// sources:
// assets/map.html
// assets/markerimage.png
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path/filepath"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsMapHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x58\x5b\x73\xdb\xba\x11\x7e\xcf\xaf\xd8\xd0\xe9\x90\xac\x25\x92\x72\x2e\x8d\xa9\x4b\x7b\x6a\x67\xce\x49\xc7\x3e\xf6\x54\xe9\x64\x3a\x9d\xce\x19\x88\x04\x45\x38\x24\xc1\x82\xa0\x2e\xf1\xe8\xbf\x77\x01\x52\x12\x44\x49\x4e\xfb\xd2\x87\x3e\x24\x06\x77\x17\xdf\x5e\xb0\x17\x40\xa3\xd7\xb7\x0f\x37\x5f\xfe\xfe\xf8\x09\x52\x99\x67\xf0\xf8\xb7\x3f\xdf\x7d\xbe\x01\xab\xef\xfb\x5f\xdf\xde\xf8\xfe\xed\x97\x5b\xf8\xe5\xcb\xfd\x1d\xbc\xf3\x82\x81\xef\x7f\xfa\xd5\x9a\xbc\x1a\x29\xc9\xc9\x2b\x80\x51\x4a\x49\xac\x16\xb8\x94\x4c\x66\x74\x72\xbf\x86\x3b\x1e\x11\xc9\x78\x31\xf2\x1b\x52\xc3\xce\xa9\x24\x50\x90\x9c\x8e\xad\x05\xa3\xcb\x92\x0b\x69\x41\xc4\x0b\x49\x0b\x39\xb6\x96\x2c\x96\xe9\x38\xa6\x0b\x16\xd1\xbe\xfe\xe8\x01\x2b\x98\x64\x24\xeb\x57\x11\xc9\xe8\x78\xd0\x83\x9c\xac\x58\x5e\xe7\x5b\x82\x05\x7e\x8b\x5d\xc9\x75\x46\x41\xae\x4b\x04\x97\x74\x25\xfd\xa8\xaa\x2c\xc8\x69\xcc\xc8\xd8\xaa\x22\x41\x69\x61\x35\xa2\x00\x7f\x62\xb9\xd2\x0d\xb5\xc8\x9c\x54\xca\xb2\x0a\x7d\x3f\x41\x33\x2a\x6f\xce\xf9\x3c\xa3\xa4\x64\x95\x17\xf1\x5c\x61\xfc\x31\x21\x39\xcb\xd6\xe3\x5b\xc1\x59\x7c\x39\x25\x45\x15\x0a\x3a\xaf\x33\x22\x7a\x33\x9e\xc5\xee\xb0\xc5\x9c\xf1\x78\xdd\x53\x31\xe9\x5d\xe4\xa4\x8c\xd9\xe2\x59\xbb\x10\x0e\x82\xe0\x77\xc3\x94\xb2\x79\x2a\x9b\x75\x49\xe2\x98\x15\xf3\x30\x18\xe6\x44\xcc\x59\x81\x0b\xa5\xbb\xdf\xe8\x09\x6d\xad\x08\x94\x22\xbb\x61\x54\xec\x3b\x0d\x07\x57\xe5\x6a\xb8\x69\x75\x79\x3c\xbb\x41\x8e\xe0\xd9\x4f\x52\x0a\x36\xab\x55\xa8\x9f\x67\x5c\x4a\x9e\x87\x6f\xcb\x15\xbc\x6e\x1c\x24\x85\x1c\xce\x48\xf4\x6d\x2e\x78\x5d\xc4\xe1\x45\x92\x24\x43\x5e\x92\x88\xc9\x75\x18\x78\x1f\xdf\xef\x6c\x51\xe0\x5a\xd7\xb2\x31\x54\x79\xb6\xd3\x76\x91\x91\x4a\xd6\x65\x4c\x24\x8d\x9f\xa1\xe4\x15\x53\xea\x42\x32\xab\x78\x56\x4b\x3a\x84\x8c\x26\x52\xa9\x1d\x82\xe4\x65\xb3\xe8\x6a\x85\xad\xa6\x41\xa0\xd8\x7b\x23\xae\x87\xf0\xbd\xcf\x8a\x98\xae\xc2\xeb\x6b\xfc\x98\x71\x11\x53\xd1\x17\x24\x66\x75\xd5\x4a\xb7\xc4\x70\x80\x9e\xa1\x4e\x8c\xce\x45\x2b\xbb\xea\x57\x29\x89\xf9\x32\xd4\x14\x40\x69\xfd\xaf\xd9\xf6\x62\xb4\x80\x3c\x47\x3c\xe3\x22\xbc\x08\x82\x6b\x33\x5e\xa0\x92\xa7\x1f\xd3\x88\x0b\x9d\xc1\x61\xc1\x0b\xda\xc6\x62\xe4\xeb\x2c\xdb\x66\x5c\x24\x58\x29\xa1\x12\xd1\xd8\xda\x66\x11\x79\x22\xab\x6e\x12\x29\x9a\x9f\xb1\x59\xe5\x3f\xfd\xab\xa6\x62\xed\x0f\xbc\x0f\xed\xd2\xcb\x59\xe1\x3d\x55\xd6\x04\x91\x35\xda\x19\x68\x44\x5e\x2e\x97\x1e\x2f\x69\x91\x91\x35\x15\x95\xc7\xc5\xdc\x47\x0d\xfe\x03\x92\xee\x1a\xd2\x79\x1c\xa3\x2a\x9e\xc8\x82\x34\x54\xac\xbc\x94\x88\x8a\x62\xe5\xd5\x32\xe9\x7f\xdc\x55\x47\x54\x0b\x81\x05\x99\xb5\x25\x0c\x63\x28\xea\x2c\xdb\xe6\x39\x8b\x8e\x48\x98\xc7\xdf\xd0\x80\x0e\xf5\x3b\xe7\x39\x92\x06\xc3\x57\x2d\xe1\x8d\x93\xd4\x45\xa4\x20\x1d\xf7\xb9\xa5\xa9\xcd\xa5\xda\x48\x97\x60\xb8\x72\x4f\x4a\xc7\x6a\xca\xc8\xea\xc1\x5e\x18\x74\xb7\xc0\x93\xac\x42\xf8\x87\x41\x85\x2e\x40\x7b\xe0\xde\x4f\x62\xfe\xa8\x9c\x14\x8e\xdb\xfb\x8f\xe4\xf7\x19\xe2\xb8\xc6\x86\x7f\xee\xd6\x9b\x5d\xc5\x6b\xdb\x3d\xcc\x6b\x8d\xe1\x74\x10\xf5\x1f\xef\x61\x7a\xef\xb8\xee\x2e\x04\x00\x0b\x22\x20\xe3\x28\x24\x8f\xbd\xbe\xd3\x74\x07\x02\x2f\xe8\xa9\xff\xc0\x3d\x30\x19\x33\x59\x0a\x6c\x0b\x09\x17\xb9\xd3\xe1\x1c\x39\xf4\x28\xf8\x13\x6d\x82\x6d\x7d\x7a\x9c\xfe\x1c\xbe\x7b\x7b\xf5\xc1\x72\x7b\xe0\xfb\xb0\x43\x81\x44\xe0\x19\x7d\xfd\x79\x0a\x83\xeb\x8f\xef\x8e\x20\x95\x7b\x73\x2a\xf7\x50\x0f\x33\xb5\x70\x5c\x0d\xc2\x61\x5a\xa6\x54\x30\x6c\xc4\x70\x4f\x05\x26\x0b\x17\xb0\x97\xed\xa0\x99\x31\x30\xf2\xe5\x54\xcc\xee\x1b\xb6\x03\x56\xbb\xb2\xe0\x5c\xcc\x5b\xa4\x6e\x80\x67\x08\xfd\x87\x0f\x43\xbd\x4e\x71\xfd\xf1\x6a\x78\xc0\x97\x5a\x20\x68\x04\xa4\x92\x48\xe1\xf7\xe0\x20\xd9\x87\x99\xdb\x91\x45\xae\x83\x32\x7d\x78\xeb\xa2\x50\x7f\x70\xc8\xce\x90\x1d\x78\xef\x91\x83\xbb\x1b\xf6\x01\x5f\x35\xef\x63\x47\xa7\x48\x45\x75\x3d\x99\x76\xb4\xf1\x24\xc1\x8a\x3c\xde\xf0\xc8\x56\x34\x73\xb2\x1e\x48\x63\xc3\xb6\x14\x0f\x45\x3f\x23\xd5\xb1\x9f\x9f\x6b\xcc\xfa\xcd\xc6\x2b\x8b\xb9\xdd\xd3\x66\xf4\x5a\x74\x03\xe1\x44\xa9\x77\x0b\x51\x05\xd8\x69\x32\xb6\xa7\x35\x1e\x9c\x85\x0e\xbf\x3a\x8f\x56\xb0\x03\x78\x78\xea\xa5\x87\xda\x6f\x90\x4d\x05\xec\x20\x55\x9b\x30\x20\x51\xe2\xb3\x12\x58\x90\xcc\xb1\x9b\xa1\x73\x4b\x24\x71\x5c\x74\x02\xc7\x67\x10\x18\xb2\x26\xdb\x50\xf4\xc6\x59\xe2\x40\xe1\x4b\xd7\x9b\xe1\x5f\xc7\x16\x54\x79\x8f\xfb\x8d\xf6\xa3\xc6\xd8\x6f\xba\x95\xe2\x56\xa3\xa6\x37\x7b\xa0\xad\xf4\x81\x1a\xa3\x17\xbd\x51\xb5\xf1\x97\xe9\xc3\xaf\x2a\xd8\xa0\xa2\x0d\x18\xee\xa7\x8a\x17\xa6\x2a\xdc\x4a\x5c\xb3\x81\x2d\x05\x6b\xc1\x34\x6b\x78\xa2\xb1\x6c\x8e\x4c\xe8\x6c\x32\xac\x60\x89\x26\x79\xca\x44\x18\x8f\x01\x27\x2e\x4d\x58\x41\x63\xf7\xa0\x6d\x0a\x2a\x6b\x51\x18\xca\x8c\x68\xd9\xe6\x80\xb7\x5d\x4f\x5d\x62\x1c\xdb\x36\x4c\x3b\x96\x21\x25\xe6\x08\xc6\x16\xaf\x5d\x82\x17\xf3\x89\xb2\xad\xe9\x26\x6a\x46\x6a\x12\xd8\x70\x09\x7b\xdb\x2e\xc1\x1e\xcd\x84\x3f\x31\x71\xd1\xf8\x7b\x22\x53\x4f\x5f\x14\x1a\x3f\xaa\x92\x2a\xdb\x27\x10\x1c\x3a\xf0\x63\x13\xa6\x6a\x67\x78\x4a\x3d\xab\x4a\x3c\xea\xdf\x34\xf4\x49\x3b\x36\x47\xe1\xc4\x0d\x11\x85\xd7\x67\xe3\xf9\x63\x73\xb6\x37\xe0\x53\x16\x35\xe8\x2f\x5b\xf2\x92\x86\x92\x14\xa0\x6f\x22\x63\x6b\x7f\x43\xbc\xee\xdc\xe1\x0a\x6c\xf0\x24\x1b\x5a\x93\xbf\xd2\x04\x4b\x20\x45\xdf\x71\xe8\xec\x6c\x28\xf8\x52\x5b\xe0\x2b\xb4\xc9\xcb\xa7\x5d\xa5\x7c\x79\x50\x62\xdb\x30\x35\x21\x9d\xa8\xca\x3c\x8c\xcf\x76\xf8\x5f\x9d\x72\x8d\x66\x15\x3d\x82\x78\x7f\x06\xe1\xdd\x59\x84\x53\xd2\x1f\x4c\xe9\xff\x6a\xe8\x6a\x63\x50\x68\xce\x64\x1d\x63\xaf\x6c\xbe\xf1\x08\xd5\xe7\xff\xd9\x24\xde\xc3\x36\xfd\x5b\xd0\x9c\x2f\xe8\xd9\x16\x6e\x5a\xf1\xe3\x0e\xfe\x3f\x98\x29\x5b\x59\xb3\x89\x9f\xed\x9d\x86\x90\x91\x32\x2a\x25\x58\x4e\xe6\xf8\x3e\x5c\xa0\x89\x6f\xba\x5a\x3c\x65\x96\xa7\x25\x6e\xd9\xa2\x33\xa5\x2b\x9a\x25\x7a\x53\xa7\x50\x3a\x57\x03\x7c\x16\xa9\xcb\xc3\x56\x8d\xd7\x8c\x5f\xc7\xf5\x34\xe7\x12\xf6\x0c\x7c\x46\x89\xaf\xea\xb9\xa8\x4e\x14\xae\x5c\xbc\x6d\x38\x4a\xc9\x31\xa7\x73\x39\xe1\xea\xf2\x7c\xac\x40\xd1\xfb\xb0\x47\xf8\x45\xb7\x04\x47\xe1\x5e\x05\x87\x75\xac\x44\x47\xdd\x6e\xfb\x12\x6e\xd7\xee\x1d\xf6\xa5\xc6\xde\x42\x6c\x8e\xb4\x5c\x9e\x32\x68\x62\x8c\xeb\xb4\x25\x9e\xb2\x65\x60\x40\xc3\x36\xb4\x83\xd3\xfa\xb4\x1a\x52\xa0\x99\x92\x3a\x26\x94\x8d\x58\x36\x84\xd0\x58\x63\x97\x2b\xdb\x7c\x14\xd8\x0a\x55\xb1\xdb\xe3\x51\xfc\x3d\x7c\x0f\xbd\x0b\xba\x69\x66\x3e\xb7\x46\xfe\xf6\x87\x90\x91\xfa\x2d\xa0\x7d\x81\xa9\xf4\x62\xf1\xd8\x32\xf2\xc4\xc2\xd9\x40\xd4\x63\x18\xd4\xd4\xf4\x3c\x6f\xe4\xa3\x54\x47\xbe\x7d\xfc\x4c\x76\xbc\x91\xdf\xa0\xa2\x1a\xfd\xc3\xcb\xbf\x03\x00\x00\xff\xff\xd5\x98\x65\x83\xb3\x11\x00\x00")

func assetsMapHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsMapHtml,
		"assets/map.html",
	)
}

func assetsMapHtml() (*asset, error) {
	bytes, err := assetsMapHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/map.html", size: 4531, mode: os.FileMode(420), modTime: time.Unix(1439039288, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _assetsMarkerimagePng = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x00\xc7\x11\x38\xee\x89\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\x00\x00\x4c\x00\x00\x00\x52\x08\x06\x00\x00\x00\xfe\x4b\x32\xc0\x00\x00\x11\x8e\x49\x44\x41\x54\x78\x01\x62\x64\x20\x09\x8c\x02\xa6\xc1\xe4\x98\xd1\x00\x1b\x0d\xb0\x51\xc0\x42\x4c\xa0\xaa\x86\xcc\xf2\x63\x62\x66\xef\x60\x60\x64\x54\x86\x8a\x0d\xa7\xb2\xef\x3f\xc3\xff\x7f\x37\xfe\xfd\xf9\x59\xf1\xee\xe6\x8e\x9d\x40\xfe\x1f\xbc\x01\x26\xac\x13\x88\x53\xf2\xed\x95\xf5\xcc\x2a\x81\x53\x02\x19\x59\xd8\xfb\xdc\x3d\x82\x65\x87\x71\xc2\xd1\xd9\xb9\x7d\xdd\x42\x01\x65\xc7\xe8\xbb\x1b\xf3\xf6\x00\xf9\x7f\x71\x06\x18\x30\x50\xf0\x65\x57\x76\x26\x36\x9e\xc9\x42\xd2\xe6\x9f\xae\x3c\xe3\x18\xd6\x59\x4d\x50\xd6\xfc\xcd\xbb\x47\x47\xdb\x80\xcc\xc3\x40\xfc\x03\x88\xff\x61\x0d\x14\x02\xd9\x95\x9b\x91\x91\x51\x8c\x4b\x58\x45\x8d\x61\x98\x03\x2e\x21\x65\x75\x46\x46\x66\x6d\x10\x13\x88\x99\xc9\x29\xf4\x59\x20\x9a\x19\x47\x4e\x5b\x8d\x11\xe6\x67\x20\x4d\x6a\xa1\x0f\x0d\x65\x76\x6c\x12\x2b\x32\x3e\x33\x00\x58\xad\x0b\x03\x5a\xb2\x22\x08\xc3\x5f\xcf\xda\x8b\x86\xa8\x89\x8a\x48\xd6\xa6\x7e\xfc\xe2\xce\x71\x97\xd6\x6a\xe7\x3c\xde\x92\x29\x2a\xe4\xfd\x89\xea\x93\x87\xc9\x16\x9b\xca\xfb\x9e\x4a\xbd\xb6\xfc\xbc\xb4\xec\xb3\x8f\x9c\xcf\x39\x9b\xb7\xac\xd9\xa6\xb2\xf7\x6b\xed\x51\x53\xb3\xd7\x6f\xce\x85\x3e\x6b\x7e\xb2\xcf\xfe\xc5\xbd\xe7\xf5\x93\x9f\xf6\x8d\x5f\xfe\xea\x17\x7f\x4b\x32\xbe\xe0\xab\xff\x86\x60\xf7\xc7\x8d\x95\xbf\x08\x3d\x9e\xaf\xbe\xb2\x97\x43\x1d\xa2\x90\x9e\x53\x10\x8d\xf7\xb1\xf7\x6c\xe1\x55\x1f\x42\x58\xaf\xca\xdd\xf1\xe4\x29\xdb\x14\x75\x3e\xc4\xda\xfc\x50\x56\xda\x2b\xcc\xa3\x3b\x6d\x6a\xe6\xb1\xfb\x8a\xb2\x9b\xe4\xa7\x92\xb8\xac\x59\xd9\x7d\xed\xe7\xbe\x51\xfd\x23\x41\xb9\xff\x86\x60\xfe\xd1\xc6\x76\x2a\x1b\xa2\x12\xb6\xc0\xbb\xc0\x4a\x51\x99\x74\xd3\x52\xb3\x7b\x84\xb0\x3b\x1b\x2d\x95\x2d\x73\xf6\xe7\x67\xbb\xdf\xc7\x02\x0a\x3f\xeb\xa6\x27\xdb\x78\x0e\x1f\x22\xeb\xfe\x92\xe8\x7b\xc6\x33\xee\x75\xe6\x1f\x84\xfb\x5f\x08\xe6\xef\x49\xd8\x3e\xfd\xc7\x46\x77\x2a\x1c\x8b\x98\x08\xb1\x5e\x7d\xe2\x84\xd0\x5e\xee\xf0\xca\x99\x21\x9e\xdf\xcf\x75\x67\xed\xb3\xf3\xd9\xb9\x52\x53\x69\xdf\xd0\xa9\xd7\x95\x77\x63\x23\x6e\x0f\xf2\x55\x8f\x95\x42\x87\x47\xcb\xb3\x47\xf5\xff\x04\xae\xff\x38\xcc\xb1\xa3\x59\x8f\x3a\x45\x01\x06\x08\x71\x9d\xdb\x51\x44\x71\x1d\xf7\x28\xf4\x50\xce\xaf\x89\x35\x0f\xe6\xb6\x7a\xe6\x0a\x3f\x0b\x90\xea\xbd\xbd\x6e\xe9\xbd\x27\x7f\x34\xbf\x2b\x5f\x7a\xef\xee\xb6\xf4\xda\xea\x14\x49\x89\xe4\xc5\x9e\x24\x77\x30\x18\x08\x13\x39\xd5\xfc\xac\xc1\x98\xb7\xf2\xe2\xf0\xec\xb9\x67\x77\x91\x59\xe7\x8e\x9c\x32\xd1\xc2\x3c\x02\x32\x10\x96\x01\x06\x37\x21\xa7\xd2\xca\x80\xc8\x6c\xce\x8a\x00\x94\x73\x10\xb8\x0f\xd1\xb7\xfd\x29\xff\xaf\x0c\x93\x2b\xcf\xda\xc0\x3c\x87\xa8\xa3\xbc\x4f\x40\x89\x1c\xc8\x2c\xa8\x7e\xe5\xac\x53\x00\x29\xa5\x12\xb6\x29\x39\x66\x46\x08\xe0\x32\x90\x4a\x48\x9a\x05\xcc\xc0\x3d\x87\x99\x1c\x0c\x70\xc0\x4a\x98\x96\x67\x55\xb9\x36\xef\x43\x20\x15\x76\x83\x96\xc7\x30\xc9\x0b\x33\x54\xe9\x54\xd1\x0e\x59\xfd\xe0\x99\x29\xf5\x00\xb3\x80\xbb\x13\x42\x40\x99\x5d\x66\x30\x9f\xcf\x91\x9c\x10\x87\x0c\x06\x03\x16\x8b\x05\x20\xdc\x33\xe0\xa8\x50\xb8\x05\x07\x51\xb6\x5b\x30\x0a\x68\x58\x06\x8b\xef\xc9\xb0\x66\xbb\x4c\x3a\x87\x8e\x00\x6a\x40\xea\xf3\xbc\xd2\xd1\x0a\xb0\x60\x00\x5c\x5f\x5f\xd3\xa5\x0e\x49\x5c\x5e\x5d\x71\x7e\xfe\xb5\x07\x6d\xef\xe0\x88\xa3\xa3\x67\x6c\x6c\x6e\xb0\xba\xb2\x82\x15\x90\xa8\x2c\x8c\x55\xcf\x26\x32\x7f\xda\xe7\x2c\x47\x50\xd9\x57\x40\xfb\x4e\x0c\x6b\x44\xdf\x1d\x59\x24\x25\x01\x06\xb2\xfc\xf0\x4e\xb6\x5a\xd5\xe4\x2c\x03\x6a\x88\x80\x4b\x04\x33\xbe\x7e\x3d\xe5\xed\x9b\x37\x5c\x5d\x5d\xf5\x00\x99\x05\x52\x72\x5c\x8e\xdc\x19\xdd\xde\xf2\xee\xf5\x6b\xd6\xd7\xd7\x79\xf5\xf2\x05\x3f\x3c\x7f\xc1\xea\xda\x16\x2e\x48\x6e\x40\xcc\x6c\x4e\xb8\x7b\xc5\x74\xa3\x7e\xde\x2c\x7a\x58\x06\xda\x65\x38\xa1\x08\xec\x77\x29\xef\x48\xcd\xf0\x36\xc4\x84\xe7\x01\x8f\xc3\xa2\x68\x1b\xd0\x75\x1d\x21\x44\x6e\x47\xb7\xfc\xf9\x9f\xfd\x29\x9f\x3e\x7d\x60\x3e\x7f\xc0\xdd\xfb\x63\xd0\x83\xd9\x87\xa9\x01\x31\xc0\xf8\x6e\xc4\xdf\xff\xfd\xdf\xf3\x27\x3f\xf9\x09\xff\xf2\xcf\xff\x88\xa7\x39\xc3\x18\x49\xa9\xab\x75\xa8\x84\xa4\xc1\xd3\xda\x64\xf6\x8d\x79\xfd\x7f\x86\x64\xcb\xb0\xca\x39\x17\x5d\x50\x01\xa9\x30\x8c\x12\x06\xf4\x13\x8c\x31\xf6\x9a\xf4\xaf\xaf\xff\x95\xc9\x64\xc2\xca\xca\x6a\x66\x47\xca\x5a\x46\x99\xac\x99\x91\x92\xf7\xd7\x0c\x62\xe4\xee\x6e\xd4\x03\x7d\x7f\x3f\xe5\x57\x7e\xed\x37\x59\x89\xab\xcc\xba\xae\xc6\xa2\x84\x1f\xb4\xa0\xd5\xba\x66\x45\xcf\xc4\x32\x45\xbf\x38\x7c\xc0\xab\xfd\xad\x86\xb9\x50\xe5\x07\xdf\xbc\x79\xcd\xc7\x0f\x9f\x58\x59\x59\x29\x0e\xdf\x2c\xe0\x5e\xb3\xb3\x76\xfb\x42\xd0\xbf\x00\x5c\x1d\xef\xdf\xbd\x61\x36\x9b\xff\x3b\x68\xbf\xc1\x60\x75\x0b\x92\x53\xd8\x4c\x13\x8d\x25\x4c\x1d\x00\xf2\x36\xd8\x77\x2d\x20\x82\x5a\x86\x19\x52\xcc\xbb\x1d\x64\xb5\x5e\x55\x80\x81\x00\xb9\x58\x59\x19\x72\x7e\x71\xce\x9b\xd7\xff\xdc\x87\x95\x11\x90\x54\x31\xea\xf1\x36\x06\x86\x51\xeb\x66\xb4\xc8\xda\x6a\xe4\xcb\xe9\x67\x40\xfc\xc6\x6f\xff\x01\x66\x01\x24\xe4\x46\x71\xf5\x75\xb8\x41\x1e\xc2\x31\xa0\x12\xfc\xef\x65\x2b\xd4\x6e\x3b\x24\x85\xe2\xc0\x6b\xc0\xa0\x15\x7d\x30\x81\xa7\xc4\xc7\x8f\xef\xfb\x90\x8a\xf1\xdb\x2e\xbb\x3d\xe6\xee\x58\x4e\x9f\x64\x30\x18\x0e\xb8\x3c\xff\xc2\xf9\xf9\x19\x87\xc7\x2f\x70\x09\x6c\x80\xe4\x14\x0b\x53\x44\x9e\x62\xac\x9d\x0c\x94\x0b\xc7\xd1\xf7\x63\x58\x3b\xa1\x84\x7b\x02\x23\x03\xe6\xd9\x50\xa6\xa2\x25\xb5\x6e\xc4\x10\xb9\xb8\x38\xe7\xf4\xf4\x34\x87\x60\x44\x4a\x8d\x8f\xf2\xfa\x9a\xc2\x8e\x1c\xb6\xc5\x84\xe2\xf4\xdb\x8b\xee\x3f\xc2\xf3\x03\x07\x07\x3f\xf4\xf7\xef\xbc\xb0\xb3\xbd\x4f\xd9\x46\x2a\x19\x02\x6a\xe7\xf5\x5d\x45\x1f\x00\xdc\x05\x26\xe4\x0e\x50\xf6\x49\x0d\x4b\x4c\x7c\xfe\x7c\xca\x64\x3c\xc9\xec\xf2\x1a\xac\x3a\x4c\x6a\x71\xae\x19\x56\xdd\x0b\x52\x4a\x04\x33\x46\xb7\x23\xbe\x9e\x9f\x73\x72\xf2\x0c\xa5\xa2\x79\x4f\x32\x56\x02\xab\xbf\xef\x7b\xd9\x0a\xf4\x78\xc8\x95\x45\x5a\xf8\x23\xfa\x0b\x35\x03\x33\x1e\x1e\x66\x8c\x46\x23\xa0\xd4\xaa\x9e\xb0\x2e\xe5\x5e\xad\x5b\x2f\x26\xd5\xdd\xcb\x0f\xe3\x9e\xf8\xf0\xe1\x3d\xb3\xf9\x9c\x30\x88\x80\x30\xac\x5c\xd7\x4e\xc0\x0c\x8a\x81\xa5\x9d\xd7\x77\x64\x58\xd7\x25\x64\x8e\xb2\xae\x80\xb7\xe1\x50\xb6\x23\xf4\x62\x7f\x75\x7d\x09\x80\x59\x6c\xc2\x8f\x62\x45\x84\x51\xb3\xab\x76\xf4\xee\x45\x9f\x8a\x8f\x50\xea\x98\xdf\x4f\x99\xcf\x1e\xd8\x58\xdd\x40\x33\x43\xf2\xc6\x33\x1a\x75\x71\xc0\x93\x70\x33\x3c\x81\xd0\x32\x34\xac\x51\x7f\x5a\x7f\x43\xcb\x8e\x5e\xe8\xe7\xf3\x79\x1d\x5e\x0d\x0b\xf4\x3f\xe9\xde\x95\xfb\x9b\x59\xcf\xae\xdb\x9b\x1b\x56\x37\x76\x10\x4d\x3e\x59\xe5\x8f\x65\xbb\x4e\x04\xc4\x72\xde\x92\x9e\x12\x0a\x09\x01\x2e\x07\x37\x4a\x1e\x67\xd6\x1f\xc7\x2c\x17\xed\x8c\xe1\x60\x48\x08\xa1\x0a\x27\x7f\xac\x4f\xa2\x35\x9d\x4d\x98\xb6\xa3\x38\xbb\x5e\xfc\xc7\xe3\x09\x27\x5e\x57\x26\xea\x73\xcb\xfd\x28\x8f\x48\x3e\x67\x69\x3e\xac\xf2\x58\x5e\x8e\xd5\x0e\x9a\x92\x74\xbb\x60\x3e\x5f\xf4\x4e\x5f\x32\x42\xa4\x0a\xbb\x2a\x34\xb1\x27\xc1\x42\x7a\xc2\xb9\x1b\x72\x67\x36\x9f\x91\x2a\x2f\x23\x6a\x60\x55\x49\x7c\x06\xd0\x6c\xb9\x3e\xac\x93\x81\xc0\x31\x54\x52\x23\x47\xc5\xf5\x1b\xc9\x45\x08\x11\xb9\x71\x37\x9d\x92\x92\x88\x31\xd2\x75\x8e\x1c\xa0\x02\x06\xab\xcd\x2e\xd4\x25\x21\xf2\x36\xa0\xf6\x2f\x00\x0e\x71\x30\x20\xe1\xb8\x5b\xd1\x41\xcf\x3c\x72\x28\x59\x49\xde\x47\x72\x21\x63\x79\x0c\x2b\x2c\x00\x1c\x83\xd6\x22\x10\x90\xac\xd2\xb6\x1e\x40\x2c\x64\x4f\x45\xc5\x4a\xf4\xcd\x97\x32\xf5\xff\xcd\x70\x17\x6b\xeb\x9b\x1c\x1d\x1d\x63\x66\x24\xa9\x48\x54\xc9\x6b\x1f\x85\x35\x65\x80\x96\xc7\x30\x77\x01\x8e\x1b\x48\xde\x96\x54\x8a\xcf\xea\xfd\x52\x80\xe3\xe3\x43\x4e\x3f\x6d\x30\x9d\xde\xf7\x2c\x6b\x45\xbf\x36\x98\x5e\x87\x96\x9a\x7b\xf2\x58\x8f\x52\xe7\x6c\x1e\x6c\xb1\xbd\xb3\x87\xa7\xfc\x63\xb8\x3f\xa9\x7b\xee\x29\x3f\x6b\x66\x22\x4b\xaa\x87\xd5\x5a\xe5\x12\x26\x01\xf9\x33\x25\xc4\x8a\x0f\xdb\xde\xda\x66\x6b\x73\x93\xdb\xdb\x11\x00\x21\x84\x96\xad\x40\x93\xb4\x37\x80\x52\xb8\x43\x71\xfd\xe4\xac\x21\x60\x74\x6e\x78\x72\xa8\x74\x8f\x47\x60\x09\xa8\xca\x3f\x26\x40\x4b\xa9\xb8\x96\xc9\xb9\xd7\xa1\x93\x41\x82\x6a\xe2\x46\xea\xfa\x72\x33\x3f\xf7\x0b\xbf\xc2\x78\x7a\xcf\xf8\xee\x2e\xa7\x4f\x56\xdf\xbb\x84\x0f\x95\x76\xa9\x61\x22\x32\xcc\xb2\xd7\x72\x30\x8c\xc1\x60\x88\x8a\xc5\xa9\xc2\xb5\x81\xc3\x0c\xdc\x81\xaa\x82\x21\xb1\xa4\xf2\x8e\x2b\x1b\x3f\xc3\x43\x68\x58\x00\xee\x8f\xd9\x93\x30\xf6\x8f\x9e\xb1\xb3\x7b\xda\xa7\x33\xc1\x84\x1a\x86\xb9\x0b\xb5\xfa\xd8\xa4\x2f\xae\x00\x02\x77\x03\xa0\x4b\xc2\x42\x04\x0b\x04\xa0\x53\x22\x65\x35\xf7\x6c\x56\x69\x40\x4b\x2e\x32\xd9\x96\xd8\x35\x92\x72\x17\xd9\xc0\x84\xd3\x1a\x46\xab\x27\x5e\x40\xdc\xda\xdd\xc1\x81\x4e\x4e\xb4\x58\x87\x5e\x1b\x1c\x4d\xc7\xa7\x34\xa9\xaa\x66\x71\x62\x73\x7b\x8f\xdd\x83\x43\x5c\x62\xe1\x8e\x3b\xad\x0f\x03\x9a\xb0\x94\x30\x0c\x97\xd0\xd2\xca\x3b\x72\xa8\x7c\x90\x50\x75\xa2\x0a\x03\xea\xa2\xdd\x2c\x39\x47\x87\xc7\xfc\xe2\x2f\xff\x0a\x1f\x3f\xbc\x23\xcd\x17\x00\x18\x06\x06\xa8\x65\x9d\x72\x59\x07\x20\x7f\x17\x56\x00\x08\x21\xf0\xf3\xbf\xf0\x8b\x1c\x1c\x1e\x32\x7f\xe8\xe8\x14\x90\x01\x6a\xd3\x34\xa7\x00\x26\x07\x2f\x19\xf4\x12\x8d\x6b\x82\xe4\x22\x91\x20\x09\x59\x1b\x5e\x8e\x01\x32\xa0\x6a\xfb\x0f\x57\xd6\xf8\x95\x5f\xfd\x0d\x26\x93\x7b\xce\x3e\xbe\x67\x38\x1c\x94\x74\xc6\x33\x85\xe4\x82\x46\xe3\x24\x30\x0c\x79\x87\x3b\x24\x77\xb6\xb7\x77\xd8\xd9\xdd\x27\x2d\xc0\x1d\x08\x06\x4e\xd1\xd6\xa2\x51\x32\x5c\x54\xd9\x04\x25\x6f\x65\x59\x7d\xc9\xce\x23\x73\x8c\x60\x0b\x2c\x0d\xe9\x4c\xcd\x5b\x0e\xac\xb5\x0b\x12\xc9\x41\x21\xb2\xbb\x7f\xc2\xd9\xa7\x0f\xc8\xc1\x95\x10\x20\x0b\x78\x75\x3d\xc5\xcf\xd5\xb9\xa0\x03\x91\x94\x8c\xf5\xf5\x7d\xcc\xd6\x58\x2c\x04\x18\x96\x1c\x61\x15\xd0\xd6\xac\x02\xca\x7c\xc6\x10\x60\xcb\xd4\x30\x97\x10\x8e\x23\x82\x4a\x99\x07\xa8\x9b\xb7\x54\xc5\xe1\x00\x32\xdc\x13\xa9\x73\xf6\xf6\xf6\x59\x5b\xdf\x62\x32\x1d\x33\x88\x81\xe4\xa9\x00\xfe\x44\xd5\xa3\xf8\xfc\x24\x20\x44\x76\xf6\x0e\x90\x9a\xd2\x10\xa0\xd6\x7b\x55\x3f\x18\xa8\x80\x56\xe6\xb5\x8c\x55\xd4\x45\x17\xdc\x9b\x76\xda\xe3\xed\xd2\xc8\xc8\x5a\x14\xcc\x48\x5d\xd7\xf7\x1a\x9f\xbf\x7c\xc5\x22\x89\x4e\x86\xc5\x58\xaf\xf4\x69\x47\x99\xa8\x2b\x32\x5f\x74\xec\x1d\x1c\xb2\xbb\xbf\x87\xa7\x54\xbe\xf3\xbf\x3b\x28\x18\x2d\xb5\xf3\x0d\xc2\xc1\x32\x9b\xa8\x2a\xa8\x8d\xe8\x16\xd0\x04\x20\xba\xd4\x6f\xf3\xe2\xe5\x0b\xc6\x93\x09\x67\x67\x9f\x59\x74\x89\xd8\x87\x64\xbb\x04\xe0\x31\x63\xe7\x9d\xb3\xbd\xbb\xc7\xcf\xfd\xdc\x2f\x12\x07\x43\xba\x85\x63\x16\xca\x43\x7d\x6b\x99\x80\x99\x70\xaf\x43\x91\x25\x76\xbe\x3b\xe1\xc1\x00\xc7\x5d\xc8\xac\xb6\x00\x78\xeb\xde\x31\x3c\x15\x43\x4a\xe7\x10\xe2\x26\xbf\xf0\x4b\xbf\xda\xfb\xb2\xd1\xcd\x25\x1a\x18\x34\x49\x78\xfd\x19\xa3\x67\xe7\xce\xce\x2e\x1b\x5b\xdb\x74\x1e\x70\xd4\x8a\x39\x5e\x5f\x5b\xe9\x18\x18\x66\xcd\x54\x96\xe5\xf4\xcb\x83\x01\x41\x6a\xdc\x3d\x65\x22\x18\x39\x74\x81\x22\xb6\x86\x04\x9d\x43\x72\xc3\x2c\x90\xdc\x89\xc4\x2a\xfd\x69\x67\x06\xc2\xca\x9f\x27\xe1\x02\x2f\x55\x12\xf2\xd0\xe3\x8e\xd5\x13\x2c\x5a\x3e\xc3\xe4\xb8\x94\x19\xe6\x60\x34\x26\xd3\x00\x21\xb7\xca\x38\x26\xa0\x9a\x84\x59\xa3\x3f\xed\x3d\x9a\xcf\xee\xa5\x78\xe9\xee\x08\x03\x59\xfd\x4b\xa1\x02\xd6\xb7\x4d\xe9\xd2\x19\x26\x77\x64\x89\xec\x0b\x50\x00\xf0\x32\x71\x57\xc5\x16\x05\xb0\x1e\xb0\xba\x01\xc1\x20\xae\x80\x05\xba\xd4\x81\xa0\x00\x2f\x80\xaa\x63\x5d\x25\xf1\x48\xcc\x17\x8b\x0c\x76\xe5\xf7\x94\x93\xa8\x3a\x5f\xcc\xc3\x2c\xfc\xf4\x19\x26\x0c\xf7\x58\x42\x12\x0f\x08\x6b\x5a\xf5\x2a\x6c\x44\x86\x34\x40\x9e\xb0\x60\xbd\x95\x20\x3d\x70\xf1\xf5\x8c\xfb\xe9\x94\x10\x22\x60\xb8\x03\x46\xc5\x94\x50\x19\x13\x03\x0b\x7d\x39\x7a\x7c\x77\xdd\x97\x74\xe6\x21\x90\xa4\xd2\xec\x30\x33\xcc\x1d\x01\x26\x03\xfb\x69\x31\xac\xd9\x4e\x39\x01\x56\x5e\x0c\x67\x02\x37\x03\x59\xe6\x95\x97\x17\x42\x71\x2f\x32\x62\x1c\xe0\xee\xdc\x8d\x6e\x38\xfb\xf8\x86\x2f\x5f\x7e\xc4\xbb\x44\x88\x83\xc2\xa6\x02\x16\x20\x42\x61\x5c\x72\x08\x83\x01\xd3\xe9\x84\x7f\xfa\x87\xbf\xe1\x87\x93\x1f\xd8\x3f\xf9\x59\xe2\xca\x5a\x49\xaa\xc9\xf7\x28\x45\xca\x6f\x3b\xd4\xe5\x75\xbe\xa9\xbc\x16\x32\x1c\x2f\xfc\x16\x14\xbd\x02\x72\xe7\x1b\xcc\x9c\xc9\xf8\x8e\xd3\xb3\xcf\x7c\xfd\x72\xc6\xc3\x74\x8c\x99\xf5\x83\xa6\x59\x51\x4c\x68\x63\x60\x93\x0b\x80\xe9\x74\xca\xbb\x77\xef\x38\xbb\xb8\xe1\xe4\xe4\x39\x07\x07\x87\x7d\x99\xc7\xdd\xe8\x59\x59\x87\x64\x7c\x0a\xb1\x65\x76\xbe\xdd\x8b\x40\xd3\x2c\x1d\xca\x6d\xfd\x02\x46\x72\xe7\xfe\xee\x96\xaf\x3f\x9e\xf6\x60\xcd\x66\x0f\x84\x00\x31\xc6\x92\x44\xa7\x2c\xe4\x66\xf6\x24\x60\x98\xd1\x1b\xdf\xe4\x45\x16\x26\xa3\x2b\xde\x8d\x6e\xf8\xb2\xb9\xc5\xc9\xf1\x31\xfb\x07\x2f\x18\x0c\x37\x81\x7a\x79\x81\x3d\x81\xcc\x12\xfb\x92\xc2\x70\x79\x9d\x19\x63\xc1\x30\x19\x2e\xd1\x75\x0b\xe6\xb3\x19\xb7\xa3\x11\xd7\x57\xd7\xdc\xde\x5c\xf0\x70\x3f\x26\x58\x20\x46\xe1\xa5\xac\x0d\x8b\xc5\x22\x2f\x04\x6e\x56\xef\xa8\x9e\x10\x55\x23\x97\xdc\xb2\x83\x60\x00\xce\xe4\xee\x86\x37\xb7\xd7\xac\x6f\x9c\xb3\xb5\x73\xcc\xee\xde\x2e\x5b\x5b\x5b\xac\x0c\x57\xfa\x70\x37\x0c\xc8\x91\x90\x96\xcf\x30\x92\x06\x2c\xb4\x20\x7a\xbe\x81\x27\x26\xe3\x29\xe3\xf1\x98\xe9\xfd\x3d\xa3\xeb\x1f\x99\x4c\xc6\x3c\xdc\xdf\x03\x46\x88\x81\x41\x0f\x08\x28\x81\x59\xc4\x11\x00\x04\x43\x50\x2d\xeb\xac\x32\x47\xa7\x36\xc0\x88\xc7\x8b\x90\xcd\x42\x66\x69\xc4\x02\xcc\x66\x23\xa6\x3f\xde\x70\xfe\xc5\x58\x5f\x5f\x63\x73\x73\x8b\xad\xed\x43\x56\x57\xd6\xd9\xd8\xd8\x62\x6d\x6d\x2d\xdf\x63\x88\x14\x97\xc7\xb0\x2e\x25\x64\xc2\x42\xec\x99\xf4\xe9\xd3\xbf\xf2\xf9\xf4\xac\x5f\x43\x21\x4f\x04\x8c\x40\x1f\x76\x58\xa9\xc8\x36\xab\x15\xf9\xcf\x9b\x20\x35\xc3\xda\xed\xf6\x41\x6a\x07\x0f\x10\x43\x61\x2a\x0f\x0f\xf7\xfd\x0b\xe2\xfc\xe2\x6b\x5f\x22\x1f\xc6\x21\x47\xc7\x47\x3c\x7f\xfe\x73\x0c\xd6\x76\x90\xdb\xd2\x18\x56\xaa\xa1\x5d\xe7\x9c\x7e\xfa\xc0\xeb\x7f\xfd\x47\x7a\xbb\x10\x22\x44\x23\x28\x16\x73\x9a\x52\x89\x01\xcc\xac\xf8\x2d\xcc\x8a\xed\xb0\x3c\xe9\xe4\x8e\xe5\xd0\x21\x47\xbc\x59\xed\xe6\xad\x05\xbf\x05\xb0\x2c\xc4\x0b\x21\xf6\x03\x4b\xc0\xa2\x5f\x52\xf0\xf1\xe3\x88\xd9\x6c\xc1\x2f\xfc\xca\x6f\x11\xc3\x10\x2d\xc9\xb8\x96\x67\x9d\x4e\x27\xfd\x32\x26\x63\xc8\x4a\x1c\xe6\x0e\x52\x06\xa5\x59\x57\x5a\x97\x97\x51\x9d\x6f\xe6\xcf\xaa\x3e\x37\x2f\x18\xa0\x06\x0c\x50\x01\xb3\xfd\x61\xf1\xfc\xc2\xc1\x10\xc2\x3c\x10\x62\xe8\xd9\x9e\x48\x5c\x5e\x7d\x61\xef\xfa\x07\x4e\x8e\x5f\x2c\xaf\x09\xe2\x5d\xc7\x60\xb0\xc6\xe8\xf2\x8a\x87\xf1\x84\xc1\x20\xe0\x9e\x20\xb3\x2a\xc8\x50\xc5\x2a\x14\x90\x0c\xab\x17\xc5\x55\x93\xb4\xf2\xee\x28\xc0\x21\x53\xe9\x45\x56\x88\x51\xd8\x4a\xa0\x25\x48\xc0\x10\x56\xa8\x56\x60\x4b\x86\xe4\xc4\x10\xf1\xb4\x60\x74\xfd\x95\x1f\x0e\x5f\x2d\x71\x8d\x6b\x9c\x91\x5c\x4c\x66\x97\x24\x1e\x80\xd5\xc7\x39\x5d\x1d\x2a\x32\xb0\x0e\x29\x55\xd9\x92\x30\x6a\x73\x29\x4a\xfe\x29\x80\x9c\x5c\x23\x0c\xcb\x68\xe8\xbf\x64\x84\xbe\xb5\xcf\x20\x01\xf2\x05\xf3\x6e\xc2\x3c\xcd\x40\xcb\x72\xfa\x29\xb0\x90\x31\x9b\x3b\x8e\x11\x83\xa1\x27\x2b\xb4\x02\x19\x22\xd6\x62\x9f\xc3\xd0\xaa\x50\x32\xa0\xee\x36\x19\x54\x4c\x45\x02\x73\xfe\xd7\xff\x04\x96\xef\xd9\x2d\x22\xde\xc5\xe5\x35\x41\xfe\xf0\xdf\xda\x39\x0b\xd8\xe6\xad\x28\x0a\xc7\xf0\x33\xf3\x5f\x66\x12\x8d\x99\x99\x79\x62\x1e\xa3\x68\x62\xe6\xf1\x44\x63\x66\x66\x66\x5e\x99\x99\xfb\x97\xdb\xd4\x0c\x4d\xec\x38\x7e\xbb\x6f\xbd\x93\x9e\xca\x75\x86\x4e\x2d\x1d\x25\xcf\x4e\x9c\xdc\x4f\xef\x9d\x13\xbc\xbf\xe6\xe0\xb5\x8b\xe7\xce\xb0\xda\x3a\xb8\x65\xfe\x89\x29\x44\xfe\x99\x6d\xe3\x5c\xa3\x85\xea\xce\xbf\xed\xbd\x24\xf1\x09\x96\x13\xfa\x0d\x7c\x23\x55\x60\xb0\xe4\x63\xe3\x44\xeb\x16\xc5\x5d\x65\x99\x61\x66\xe5\xe9\xbd\xe3\x11\xc7\x32\x69\xcd\x41\x81\xf9\xa0\xa4\x3e\xf8\xd3\xb3\x3b\x0b\x22\x77\x27\x88\x3f\x25\xee\xae\x38\x1c\x4a\x58\x5a\xd7\x14\x67\xf7\x09\xda\xc0\xf7\x2f\xd1\x21\xc8\x0f\x02\x2c\x09\x8a\x47\x9b\xde\xf8\x15\xa2\x78\xd7\xae\xfc\xf8\xf5\xc4\x19\x75\x39\x5e\xd8\xe8\x39\xd6\x64\x4a\x0d\x7f\xf6\x9d\xba\x8d\xdf\x72\x60\x67\x2a\xe7\xf0\x63\x33\x06\x6f\xb5\xee\xf8\x2b\xd6\x21\xe7\x58\x9c\xd4\xfa\xee\x63\xda\xc0\x0f\x55\xd8\xe4\x23\x19\x04\x98\x07\x9a\x05\x49\x70\xb2\x6f\x41\xad\x70\x7d\x3b\x73\x9f\xb5\x46\x16\x07\xe2\x0f\x9f\x78\xe3\x99\xdb\x22\xdc\xc9\x7c\xf6\x95\xa9\x01\x93\x2b\x2d\x7d\xa4\xea\x9b\x68\xc3\x2b\x55\x41\xff\xa6\x80\xf7\x71\x41\x16\x68\x1a\x24\x63\xcd\x5e\xb0\x19\x86\xc0\x70\x1c\x67\x80\x11\x46\x6b\x01\xb6\x71\xaa\xf6\xb9\x8f\x8a\xae\x3e\xfa\x44\x4f\x6a\x1a\x15\xf7\x1f\x13\xa8\x9f\x0f\xbd\x2f\x47\x7c\x01\x60\x7d\x09\xc3\x18\x28\x11\x10\x98\x8f\xc0\x4c\xac\x53\xc2\x9a\x93\x41\x3d\xcc\x01\x69\xf8\x84\x74\xd0\xa6\x3f\xbf\xfc\x0d\x00\x8c\xde\x6f\x0b\x68\xaf\xde\xff\xc3\xcb\x7b\x4a\x37\xdd\x4a\xbc\x32\x87\x13\xb7\x6e\x5a\xd3\x94\xf0\x66\x1d\xde\x9d\xd8\x26\xf7\x7c\xf1\x38\x0c\x87\x41\x2a\xdb\x2b\x27\x08\x7f\xbc\xbf\x8d\xb0\xdc\x60\x1e\x86\xb3\x0c\xa1\x79\x78\x42\x81\xfd\x0e\x2c\x00\xb0\xcd\x20\x47\x6a\x7f\xff\xa7\xed\x39\xc7\x9f\xcb\x4f\x57\x1e\xd8\x90\x75\x7e\xd1\x9a\xaa\x9b\xae\x1c\xf3\xed\xe8\xb4\xd2\xf5\xd9\xaf\x30\x1c\x07\xc9\x58\x30\x09\xba\xba\xb1\x4e\x0f\x2f\xfd\x54\x5f\xb8\xfa\xa8\x44\xaa\x9d\x6d\x40\x0e\x5e\x6e\x91\xda\xde\x7b\x29\xf3\x94\x3b\x1e\xa2\xe6\x8d\x01\xb0\x2a\xa3\x17\x45\x3f\x7b\xbc\xe5\xcd\xfb\x60\x38\x03\x92\x98\x15\x40\xc2\xd6\xa1\x8e\x30\x33\x55\xb5\xc6\x1a\xba\xec\xe9\xf6\x4f\x7c\xb9\xca\x5c\xbd\xd1\x57\x9b\xf6\x54\xdb\x87\xf6\x54\x7b\x1f\x0c\x15\x3c\x97\xc7\xc2\x0a\x13\x30\xd6\x64\x0d\x5a\xf0\x54\xcd\x33\x6f\xd3\xef\x9e\xa8\x89\xaf\xca\xe8\x61\xc5\x8c\xff\xfc\xc8\x6b\x08\xcb\x64\xfd\x26\xac\xc0\xd8\x97\x2b\x6a\xd2\xb1\xa6\xe1\xc5\xe2\x0b\x9c\x3b\xb6\x99\x9a\xf9\x72\x46\xcf\x39\xe3\x9b\xd5\xde\xaf\x9f\xc3\x65\xa8\xb2\xf1\x1f\x76\x60\x84\x89\x72\x19\x5e\xdf\xfd\xe4\xd9\x72\x3f\x35\xf3\xe5\x8c\xde\xb3\x67\xfa\xe4\x8e\x8f\x7e\xa5\xf7\x61\x66\x17\x09\x3d\x30\x66\x69\xc6\xd1\xb0\x65\x48\xcd\x97\x05\xde\xdd\x4f\x4d\x7d\x51\xa3\x17\xbc\x43\x72\xe7\x47\xaf\x20\x2c\x0d\x5f\x7b\xf9\xe9\xd4\x96\x94\x60\xb2\xd9\x20\x85\x06\x40\x2c\xda\xfd\x15\x35\xf5\x85\x46\x5f\x65\xda\x93\xad\x1f\x9b\xa3\x75\x5d\xf3\x8d\x3e\x8d\x80\x31\x2f\x8c\x31\x00\xa2\xcd\x6f\xbc\xc7\x01\x07\x0c\x00\xc6\xe8\x09\x17\x6d\x7a\xed\x7d\x84\x65\x30\x46\xff\xef\xf7\x71\xfd\x37\x03\xc0\x35\x26\x46\xd5\x9e\xaf\x9f\xdb\x53\x7e\xd9\x1d\xf4\x1d\x00\x3d\xf8\x87\xd1\xf7\x7c\xf9\x44\xc2\x96\x26\xd0\xe8\x63\x8c\xd1\xa7\x25\x30\x36\x00\x14\xb9\xf3\xe3\xdf\x76\xe4\x9d\x7c\x21\x1f\xad\xdc\x3f\xe7\x5f\xb2\x44\xf7\xcd\x7b\x19\x41\xd2\xbd\xb5\x32\x1b\x00\x92\xd2\xf5\xe9\x2b\x5c\x42\xf5\x23\xae\xec\x41\x8f\xd9\x17\xe9\xbe\xf9\x46\x9f\xce\x33\x6c\x7e\x00\xc8\xc6\x91\xca\x66\xd0\x3d\x78\x4c\x46\x31\x46\xbf\x0e\x6c\x7e\x00\x88\x38\x9b\x22\x38\xd6\xf1\x18\xce\xae\x75\x60\x6c\x00\xd8\x08\xc6\xc4\x7d\xce\x3c\xa3\xff\xd7\xb7\xdf\x01\xc8\x4e\x18\xfb\x61\x66\x9e\x4a\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\x01\x00\x00\xff\xff\x0d\x20\xe0\x19\xc7\x11\x00\x00")

func assetsMarkerimagePngBytes() ([]byte, error) {
	return bindataRead(
		_assetsMarkerimagePng,
		"assets/markerimage.png",
	)
}

func assetsMarkerimagePng() (*asset, error) {
	bytes, err := assetsMarkerimagePngBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/markerimage.png", size: 4551, mode: os.FileMode(420), modTime: time.Unix(1439037751, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if (err != nil) {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/map.html": assetsMapHtml,
	"assets/markerimage.png": assetsMarkerimagePng,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"map.html": &bintree{assetsMapHtml, map[string]*bintree{
		}},
		"markerimage.png": &bintree{assetsMarkerimagePng, map[string]*bintree{
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        // File
        if err != nil {
                return RestoreAsset(dir, name)
        }
        // Dir
        for _, child := range children {
                err = RestoreAssets(dir, filepath.Join(name, child))
                if err != nil {
                        return err
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

